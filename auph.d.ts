import { AuphBuffer, AuphBus, AuphMixer, AuphVoice, f32 } from "./protocol/interface";
export * from "./protocol/static";
export declare const init: () => void;
export declare const shutdown: () => void;
export declare const set: (name: number, param: number, value: number) => void;
export declare const get: (name: number, param: number) => number;
export declare const load: (filepath: string, flags: number) => number;
export declare const loadMemory: (data: Uint8Array, flags: number) => number;
export declare const unload: (name: number) => void;
export declare const stop: (name: number) => void;
export declare function pause(name?: AuphMixer | AuphVoice | AuphBuffer | AuphBus): void;
export declare function resume(name?: AuphMixer | AuphVoice | AuphBuffer | AuphBus): void;
export declare function play(buffer: AuphBuffer, gain?: number, pan?: number, rate?: number, loop?: boolean, paused?: boolean, bus?: AuphBus): AuphVoice;
export declare function getMixerStateString(state: number): string;
export declare function getBufferStateString(state: number): string;
export declare function setGain(busOrVoice: AuphBus | AuphVoice, value: number): void;
export declare function getGain(busOrVoice: AuphBus | AuphVoice): f32;
export declare function setPan(voice: AuphVoice, pan: f32): void;
export declare function setRate(voice: AuphVoice, rate: number): void;
export declare function setPause(name: AuphMixer | AuphVoice | AuphBuffer | AuphBus, value: boolean): void;
export declare function setLoop(voice: AuphVoice, value: boolean): void;
export declare function getPan(voice: AuphVoice): number;
export declare function getRate(voice: AuphVoice): number;
export declare function getPause(voice: AuphVoice): boolean;
export declare function getLoop(voice: AuphVoice): boolean;
export declare function getCurrentTime(voice: AuphVoice | AuphMixer): number;
export declare function isActive(name: AuphVoice | AuphBus | AuphBuffer | AuphMixer): boolean;
export declare function getDuration(name: AuphBuffer | AuphVoice): number;
